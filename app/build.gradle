apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "app.getfeeling.feeling"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
            hostName: "getfeeling.app",
            defaultUrl: "https://getfeeling.app",
            launcherName: "Feeling"
        ]
    }
    buildTypes {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        def feelingApiUrl = properties.getProperty("feelingApiUrl")
        def feelingApiClientId = properties.getProperty("feelingApiClientId")
        def feelingApiRedirectUri = properties.getProperty("feelingApiRedirectUri")

        debug {
            buildConfigField 'String', "FEELING_API_URL", feelingApiUrl
            buildConfigField 'String', "FEELING_API_CLIENT_ID", feelingApiClientId
            buildConfigField 'String', "FEELING_API_REDIRECT_URI", feelingApiRedirectUri
        }

        release {
            buildConfigField 'String', "FEELING_API_URL", feelingApiUrl
            buildConfigField 'String', "FEELING_API_CLIENT_ID", feelingApiClientId
            buildConfigField 'String', "FEELING_API_REDIRECT_URI", feelingApiRedirectUri

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Fixes duplicate META-INF/atomicfu.kotlin_module
    packagingOptions {
        pickFirst 'META-INF/kotlinx-io.kotlin_module'
        pickFirst 'META-INF/atomicfu.kotlin_module'
        pickFirst 'META-INF/kotlinx-coroutines-io.kotlin_module'
    }

    dataBinding {
        enabled = true 
    }
}

dependencies {
    // Core dependencies
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
    implementation 'androidx.core:core-ktx:1.2.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Core test dependencies
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-alpha02'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0'
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // LiveData + ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0-alpha02"

    // Navigation
    def nav_version = "1.0.0"
    implementation "android.arch.navigation:navigation-fragment-ktx:$nav_version"
    implementation "android.arch.navigation:navigation-ui-ktx:$nav_version"

    // Dagger 2
    def dagger_version = "2.20"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // Room
    def room_version = "2.1.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // ThreeTenABP Backport for JSR-310
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'

    // Emojis
    implementation "com.android.support:support-emoji:28.0.0"

    // Retrofit
    def retrofit2_version = "2.5.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit2_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    // OkHTTP
    def okhttp_version = "3.14.0"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Moshi
    def moshi_version = "1.8.0"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // Kotlin Coroutines
    def coroutine_version = "1.2.0-alpha"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"

    // Chrome Custom Tabs
    def chrome_custom_tabs_version = "a0f7418972"
    implementation "com.github.GoogleChrome:custom-tabs-client:$chrome_custom_tabs_version"
}
